<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>Home</title>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.js" integrity="sha512-2RDFHqfLZW8IhPRvQYmK9bTLfj/hddxGXQAred2wNZGkrKQkLGj8RCkXfRJPHlDerdHHIzTFaahq4s/P4V6Qig==" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" />
    <link rel="stylesheet" href="home_scss">
  </head>
  <style media="screen">
    .listOfReceivers {
      width: 20%;
      min-height: 10em;
      float: left;
      text-align: center;
      border: 3px inset;
    }
    .receiverChild {
      max-width: 80%;
      text-align: center;
      background-color: inherit;
      border: 2px inset;
      margin: 1em;
      padding: 0.55em;
    }
    .receiverChild:hover {
      cursor: pointer;
      border: 4px inset;
      max-width: 90%;
    }
    .display-whole-chat {
      float: left;
      width: 70%;
      height: 30em;
      text-align: center;
      padding: 1em;
      overflow-y: auto;
      scrollbar-width: thin;          /* "auto" or "thin" */
      scrollbar-color: green #9ACD32;
      margin-right: 0em;
    }
    .receiveDiv {
      width: 80%;
      min-height: 4em;
      margin: 1em;
      padding: 1em;
      display: inline-block;
      float: right;
      text-align: right;
      background-color: grey;
      opacity: 0.8;
      color: white;
    }
    .senderDiv {
      width: 80%;
      min-height: 4em;
      margin: 1em;
      padding: 1em;
      display: inline-block;
      float: left;
      text-align: left;
      background-color: green;
      opacity: 0.9;
      color: white;
    }
    #searchBox {
      width: 40%;
      padding: 1em;
      height: 5%;
      border-radius: 2em;
    }
    #searchBox:focus {
      outline: none;
    }
    #chatmessage {
      width: 60%;
      padding: 1em;
      height: 5%;
      border-radius: 2em;
      border: 0.2px solid black;
      margin: 1em;
      margin-left: 10em;
    }
    #chatmessage:focus {
      outline: none;
      border: 1px solid black;
    }
    .typingDiv {
      width: 80%;
      min-height: 4em;
      margin: 1em;
      padding: 1em;
      display: inline-block;
      float: left;
      text-align: left;
      opacity: 0.9;
      color: white;
    }
    .seenDiv {
      width: 80%;
      min-height: 4em;
      margin: 1em;
      padding: 1em;
      display: inline-block;
      float: right;
      text-align: right;
      opacity: 0.9;
      color: white;
    }
    .display-whole-chat{
      background: url(https://wallpaperaccess.com/full/1288076.jpg);
      background-repeat: repeat;
    }
    body {
      //background-image: linear-gradient(to right, green, #9ACD32);
      background-color: #b1bfd8;
      background-image: linear-gradient(315deg, #b1bfd8 0%, #6782b4 74%);
      font-size: 1.2em;
    }
    #popup {
      position:fixed;
      top: 50%;
      left: 50%;
      width:30em;
      height:8em;
      margin-top: -9em; /*set to a negative number 1/2 of your height*/
      margin-left: -15em; /*set to a negative number 1/2 of your width*/
      border: 1px solid #ccc;
      background-color: #f3f3f3;
      text-align: center;
      padding: 1em;
    }

    *::-webkit-scrollbar {
      width: 6px;               /* width of the entire scrollbar */
    }

    *::-webkit-scrollbar-track {
      //background: yellow;        /* color of the tracking area */
    }

    *::-webkit-scrollbar-thumb {
      background-color: gray;    /* color of the scroll thumb */
      border-radius: 20px;       /* roundness of the scroll thumb */
      //border: 3px solid yellow;  /* creates padding around scroll thumb */
    }




.getRqs {
  float: right;
  width: 10%;
}




  </style>
  <body>
    <!--<button type="button" onclick="sendMessage();" name="button">send</button><br>--> <br>
    <center><input type="text" id="searchBox" list="searchDataList" onkeyup="searching();" placeholder="search for user" name="searchusername" value="">
    <datalist id="searchDataList"></datalist><i class="fa fa-search fa-2x" aria-hidden="true"></i>
    <!--<button type="button" onclick="searchUser();" name="button">search</button>--></center>
    <div class="">
      <br>
    </div>
    <div class=" getRqs b">
      <button type="button" onclick="getPendingRequest();" name="button" class="b">get all pending requests..</button>
      <span id="pendingReqs" ></span>
    </div>
    <script type="text/javascript" defer>

      var socket = io()
      let users = []
      var name = '<%= name %>';
      console.log('name: ',name);
      var s = '<%= users %>'
      s = s.replaceAll('&#34;','')
      users = s.split('},')
      users[0] = users[0].replaceAll('[','')
      users[users.length-1] = users[users.length-1].replaceAll(']','')
      var i = 0;
      var finalUsers = []
      var globalVariableClickedON = ''
      for(i=0;i<users.length;i++) {
        users[i] = users[i].replaceAll('{','')
        users[i] = users[i].replaceAll('}','')
        var tmp = {}
        var arr = []
        arr = users[i].split(',')
        var j = 0;
        for(j=1;j<arr.length;j++) {
          var key = arr[j].split(':')[0]
          var value = arr[j].split(':')[1]
          tmp[key] = value;
        }
        finalUsers.push(tmp)
      }
      console.log('finalUsers: ',finalUsers);
      var valueOfUsername = '';
      var dataList = document.getElementById('searchDataList');



      function searching() {
        var searchBox = document.getElementById('searchBox');
        var i = 0;
        var length_searcbox = searchBox.value.length;
        let listSearch = [];
        dataList.innerHTML = ''
        for(i=0;i<finalUsers.length;i++) {
          valueOfUsername = finalUsers[i].username;
          valueOfUsername = valueOfUsername.substring(0,length_searcbox)
          console.log(name);
          if(valueOfUsername == searchBox.value && finalUsers[i].username != name) {
            listSearch.push(finalUsers[i].username)
            var option = document.createElement('option');
            option.value = finalUsers[i].username;
            dataList.appendChild(option)
          }
        }
      }
      let e = ''
      let k = ''
      function searchUser() {

        var searchBoxN = document.getElementById('searchBox');
        searchBoxVal = searchBoxN.value;
        var i = 0;
        console.log(searchBoxVal);
        var url = '';
        url = 'http://localhost:8090/user?u='+searchBoxVal+ '&e=';
        for(i=0;i<finalUsers.length;i++) {
          if(searchBoxVal == finalUsers[i].username) {
            var k = makeid(7);
            e = CryptoJS.AES.encrypt(finalUsers[i].email,k).toString()
            k = CryptoJS.AES.encrypt(k,'<%= email %>').toString()
            url += e + '&k=' + k;
            window.location = url;
          }
        }
      }

      function makeid(length) {
        var result           = '';
        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var charactersLength = characters.length;
        for ( var i = 0; i < length; i++ ) {
          result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
     }

     socket.emit('get all chats',{
       room: '<%= room %>'
     });
     let dataReceived = []
     let u = ''
     let senderDiv = ''
     let displayWholeChat = ''
     var globalE = 'email'
     socket.on('receive all chats',(data) => {
       console.log('receive all chats data: ',data);
       dataReceived = data;
       let i = 0;
       if(data.length == 0) {
         return;
       }
       for(i=0;i<data[0].messages.length;i++) {
          if(data[0].messages[i].receiver == '<%= name %>') {
            continue;
          }
          else {
            if($('#'+data[0].messages[i].receiver).length) {
              continue;
            }
            else {
              var receiver = document.createElement('div');
              receiver.setAttribute('id',data[0].messages[i].receiver)
              receiver.setAttribute('class','receiverChild')
              receiver.innerHTML = data[0].messages[i].receiver;
              receiver.style.margin = '0.5em'
              receiver.addEventListener('click',(e) => {
                //alert('clicked on '+e.toElement.innerHTML)
                document.getElementById('chatmessage').type = 'text'
                if(senderDiv != '') {
                  displayWholeChat.appendChild(senderDiv)
                }
                else {
                  console.log('senderdiv after click: ',senderDiv);
                }
                var displayWholeChat = document.getElementsByClassName('display-whole-chat')[0];
                displayWholeChat.style.border = '1px dotted black';
                //e.toElement.innerHTML = e.toElement.innerHTML.toString().split('<br>')[0];
                if(globalVariableClickedON == '') {
                  displayWholeChat.innerHTML = e.toElement.innerHTML;
                  getallChats(e.toElement.innerHTML)
                  u = e.toElement.innerHTML;
                }
                else {
                  u = globalVariableClickedON
                  //alert('u = '+u)
                  //displayWholeChat.innerHTML = globalVariableClickedON
                }
                var i = 0;
                for(i=0;i<finalUsers.length;i++) {
                  if(u == finalUsers[i].username) {
                    e = finalUsers[i].email;
                    globalE = e;
                    alert('assigned globalE as'+globalE)
                    break;
                  }
                }
                socket.emit('read all',{
                  receiver: u,
                  e: globalE,
                  sender: '<%= name %>',
                  senderE: '<%= email %>',
                  room: '<%= room %>'
                })
              })
              var listOfReceivers = document.getElementsByClassName('listOfReceivers')[0];
              listOfReceivers.appendChild(receiver);
            }
          }
       }
     })


     function getallChats(receiver) {
       i = 0;
       var displayWholeChat = document.getElementsByClassName('display-whole-chat')[0];
       for(i=0;i<dataReceived[0].messages.length;i++) {
         if(dataReceived[0].messages[i].receiver == receiver) {
           var receiveDiv = document.createElement('div');
           receiveDiv.setAttribute('class','receiveDiv');
           console.log(dataReceived[0].messages[i].time);
           var d = new Date(dataReceived[0].messages[i].time);
           d = d.toDateString()
           console.log('d: ',d);
           receiveDiv.innerHTML = CryptoJS.AES.decrypt(dataReceived[0].messages[i].message,dataReceived[0].messages[i].k).toString(CryptoJS.enc.Utf8) + '<br><br><div style="text-align: right"><small style="text-align: left"> '+  new Date(dataReceived[0].messages[i].time).toString().split(' ')[4] + ' '+  d+'</small></div>';
           displayWholeChat.appendChild(receiveDiv);
         }
         else if(dataReceived[0].messages[i].sender == receiver) {
           var senderDiv = document.createElement('div');
           senderDiv.setAttribute('class','senderDiv');
           var d = new Date(dataReceived[0].messages[i].time);
           d = d.toDateString()
           console.log('d: ',d);
           senderDiv.innerHTML = '<b><big>'+ dataReceived[0].messages[i].sender +'</big></b> <br>' + CryptoJS.AES.decrypt(dataReceived[0].messages[i].message,dataReceived[0].messages[i].k).toString(CryptoJS.enc.Utf8) + '<br><br><div style="text-align: right"><small style="text-align: left"> '+  new Date(dataReceived[0].messages[i].time).toString().split(' ')[4] + ' '+d+'</small></div>';
           displayWholeChat.appendChild(senderDiv)
         }
       }
       displayWholeChat.scrollTop = displayWholeChat.scrollHeight;
     }

     let recievedData = []
     let valOfrdaio = ''
     //var EEEE = 'forNow nothing.. ;)'
     socket.on('receive message',(data) => {
       //alert('got data')
       //console.log(data);
       //alert('u: ',u)
       //alert('data received')
       if(u == ''){
         alert('Notification: Received a message from '+data.sender)
         if(data.header == true) {
           //var chatBox = document.getElementsByClassName('chatBox')[0]
           //chatBox.innerHTML += '<br><span style="float:left">'+CryptoJS.AES.decrypt(data.message,data.k).toString(CryptoJS.enc.Utf8)+'</span> <br>';
           displayWholeChat = document.getElementsByClassName('display-whole-chat')[0];
           senderDiv = document.createElement('div');
           senderDiv.setAttribute('class','senderDiv');
           var d = new Date();
           d = d.toDateString()
           console.log('d: ',d);
           senderDiv.innerHTML = CryptoJS.AES.decrypt(data.message,data.k).toString(CryptoJS.enc.Utf8) + ' <br><small> '+new Date().toString().split(' ')[4] +' '+d+'</small>';
           //displayWholeChat.appendChild(senderDiv)
           //displayWholeChat.scrollTop = displayWholeChat.scrollHeight;
         }
         else {
           if(globalE == 'email') {
             u = data.sender;
             var i = 0;
             var i = 0;
             for(i=0;i<finalUsers.length;i++) {
               if(u == finalUsers[i].username) {
                 e = finalUsers[i].email;
                 globalE = e;
                 alert('assigned globalE as'+globalE)
                 break;
               }
             }
           }
           var popup = document.createElement('div');
           popup.setAttribute('id','popup');
           popup.innerHTML = `Confirm the req by <br><b>`+data.sender+`</b> <br><input type="radio" value="yes" name="confirmReq" id="yes"> <label for='yes'>Yes</label> <br><input type="radio" value="No" name="confirmReq" id="No"> <label for='No'>No</label> <br> <input type='submit' onclick='callMe();' value='send response to req' id= 'sendReq'> `
           document.body.appendChild(popup);
           document.body.style.opacity = '0.5';
           document.body.getElementById('popup').style.opacity = '1';
         }
         return;
       }
       recievedData = data;
       //var k = CryptoJS.AES.decrypt(data.k,data.yourE).toString(CryptoJS.enc.Utf8)
       console.log('message: ',CryptoJS.AES.decrypt(data.message,data.k).toString(CryptoJS.enc.Utf8));
       if(data.header == true) {
         //var chatBox = document.getElementsByClassName('chatBox')[0]
         //chatBox.innerHTML += '<br><span style="float:left">'+CryptoJS.AES.decrypt(data.message,data.k).toString(CryptoJS.enc.Utf8)+'</span> <br>';
         var displayWholeChat = document.getElementsByClassName('display-whole-chat')[0];
         var senderDiv = document.createElement('div');
         senderDiv.setAttribute('class','senderDiv');
         var d = new Date();
         d = d.toDateString()
         console.log('d: ',d);
         senderDiv.innerHTML = '<b><big>'+ data.sender +'</big></b> <br>' + CryptoJS.AES.decrypt(data.message,data.k).toString(CryptoJS.enc.Utf8) + '<br><br><small style="text-align: left"> '+new Date().toString().split(' ')[4]+' '+d+'</small>';
         displayWholeChat.appendChild(senderDiv)
         displayWholeChat.scrollTop = displayWholeChat.scrollHeight;
         socket.emit('read all',{
           receiver: u,
           e: globalE,
           sender: '<%= name %>',
           senderE: '<%= email %>',
           room: '<%= room %>'
         })
         if($('.seenDiv').length) {
           var seenDiv = document.getElementsByClassName('seenDiv')[0];
           seenDiv.parentNode.removeChild(seenDiv);
         }
       }
       else {
         if(valOfrdaio == 'yes') {
           var popup = document.getElementById('popup');
           popup.style.display = 'block';
         }
         else {
           if(globalE == 'email') {
             u = data.sender;
             var i = 0;
             var i = 0;
             for(i=0;i<finalUsers.length;i++) {
               if(u == finalUsers[i].username) {
                 e = finalUsers[i].email;
                 globalE = e;
                 alert('assigned globalE as'+globalE)
                 break;
               }
             }
           }
           var popup = document.createElement('div');
           popup.setAttribute('id','popup');
           popup.innerHTML =`Confirm the req by <br><b>`+data.sender+`</b>  <br><input type="radio" value="yes" name="confirmReq" id="yes"> <label for='yes'>Yes</label> <br><input type="radio" value="No" name="confirmReq" id="No"> <label for='No'>No</label><input type='submit' onclick='callMe();' value='send response to req' id= 'sendReq'> `
           document.body.appendChild(popup);
         }
       }
     })


     function sendMessage(e) {

       socket.emit('stop typing',{
         receiver: u,
         e: globalE,
         sender: '<%= name %>',
         senderE: '<%= email %>'
       })

       if($('.seenDiv').length) {
         var seenDiv = document.getElementsByClassName('seenDiv')[0];
         seenDiv.parentNode.removeChild(seenDiv);
       }

       var chatmessage = document.getElementById('chatmessage');
       chatmessage = chatmessage.value;
       if(u == '') {
         alert('please select a username..')
         return;
       }
       let i = 0;
       for(i=0;i<finalUsers.length;i++) {
         if(u==finalUsers[i].username) {
           k = makeid(7)
           e = CryptoJS.AES.encrypt(finalUsers[i].email,k).toString()
           k = CryptoJS.AES.encrypt(k,'<%= email %>').toString()
           break;
         }
       }
       console.log('chatmessage::',chatmessage);
       if('<%= room %>' !== undefined) {
         socket.emit('send message',{
           room: '<%= room %>',
           message: CryptoJS.AES.encrypt(chatmessage,k).toString(),
           sender: '<%= name %>',
           receiver: u,
           e: CryptoJS.AES.decrypt(e,CryptoJS.AES.decrypt(k,'<%= email %>').toString(CryptoJS.enc.Utf8)).toString(CryptoJS.enc.Utf8),
           k: k,
           yourE: '<%= email %>'
         })
         //var chatBox = document.getElementsByClassName('chatBox')[0]
         //chatBox.innerHTML += '<br><span style="float:right">'+chatmessage+'</span> <br>';
         var displayWholeChat = document.getElementsByClassName('display-whole-chat')[0];
         var receiveDiv = document.createElement('div');
         receiveDiv.setAttribute('class','receiveDiv');
         /*console.log(dataReceived[0].messages[i].time);
         var d = new Date(dataReceived[0].messages[i].time);
         d = d.toDateString()
         console.log('d: ',d);*/
         receiveDiv.innerHTML = chatmessage + '<br><br><small style="text-align: left"> '+ new Date().toString().split(' ')[4] + ' ' +new Date().toDateString()+'</small>';
         displayWholeChat.appendChild(receiveDiv);
         displayWholeChat.scrollTop = displayWholeChat.scrollHeight;
         document.getElementById('chatmessage').value = ''
       }
       else {
         alert('please wait! try refreshing..')
       }
     }


     function callMe() {
       valOfrdaio = $("input[type='radio'][name='confirmReq']:checked").val();
       alert('sending accept-header: '+valOfrdaio)
       if(valOfrdaio == 'yes') {
         alert('globalE: '+globalE +'u = '+u);
         socket.emit('accept-header',{
           val: 'yes',
           room: '<%= room %>',
           receiver: u,
           e: globalE,
           k: k,
           yourE: '<%= email %>',
           sender: '<%= name %>'
         });
       }
       document.getElementById('popup').style.display = 'none'
       var displayWholeChat = document.getElementsByClassName('display-whole-chat')[0];
       var senderDiv = document.createElement('div');
       senderDiv.setAttribute('class','senderDiv');
       senderDiv.innerHTML = CryptoJS.AES.decrypt(recievedData.message,recievedData.k).toString(CryptoJS.enc.Utf8) + ' <br><small> '+d+'</small>';
       displayWholeChat.appendChild(senderDiv)
       displayWholeChat.scrollTop = displayWholeChat.scrollHeight;
       if($('#popup').length) {
         var p = document.getElementById('popup');
         p.parentNode.removeChild(p);
       }
     }

     socket.emit('join-room',{
       room: '<%= room %>'
     })

     function typing() {
       socket.emit('typing',{
         receiver: u,
         e: globalE,
         sender: '<%= name %>',
         senderE: '<%= email %>'
       })
     }

     function stopTyping() {
       socket.emit('stop typing',{
         receiver: u,
         e: globalE,
         sender: '<%= name %>',
         senderE: '<%= email %>'
       })
     }

    </script>
    <div class="listOfReceivers">
      List Of Chats..
    </div>
    <div class="display-whole-chat">

    </div>
    <center><input type="text" id="chatmessage" onkeydown="typing();"  placeholder="type text to send" name="chatmessage" value=""></center>
    <script type="text/javascript">

    if(u == '') {
      document.getElementById('chatmessage').type = 'hidden'
    }
    else {
      document.getElementById('chatmessage').type = 'text'
    }

    document.getElementById('chatmessage').addEventListener('keyup',(e) => {
      if(e.keyCode == 13) {
        sendMessage();
      }
    })
    document.getElementById('searchBox').addEventListener('keyup',(e) => {
      if(e.keyCode == 13) {
        searchUser();
      }
    })


    function getPendingRequest() {

      var i = 0;
      let pendingList = []
      for(i=0;i<dataReceived[0].header.length;i++) {
        if(dataReceived[0].header[i].sender == '<%= name %>') {
          continue;
        }
        else {
          if(dataReceived[0].header[i].val == false){
            pendingList.push(dataReceived[0].header[i].sender);
            document.getElementById('pendingReqs').innerHTML = '<br>' + dataReceived[0].header[i].sender;
          }
        }
      }
      if(pendingList.length == 0) {
        document.getElementById('pendingReqs').innerHTML = '<br> No pending reuests'
      }
    }


    socket.on('typing',(data) => {
      //alert('typing..')
      console.log('typing data: ',data);
      if(u == '') {
        var nameOfTyper = document.getElementById(data.sender);
        //alert('nameOfTyper: '+nameOfTyper.innerHTML)
        if(nameOfTyper.innerHTML == data.sender) {
          //nameOfTyper.innerText += '<br>' +' is typing...';
        }
        return;
      }
      else {
        if(globalE == data.senderE) {
          if($('.typingDiv').length) {
            console.log('it exists');
            return;
          }
          else {
            if($('.seenDiv').length) {
              var seenDiv = document.getElementsByClassName('seenDiv')[0];
              seenDiv.parentNode.removeChild(seenDiv);
            }
            var displayWholeChat = document.getElementsByClassName('display-whole-chat')[0];
            var typingDiv = document.createElement('div');
            typingDiv.setAttribute('class','typingDiv');
            typingDiv.innerHTML = data.sender + ' is typing...'
            displayWholeChat.appendChild(typingDiv)
            displayWholeChat.scrollTop = displayWholeChat.scrollHeight;

            var nameOfTyper = document.getElementById(data.sender);
            //alert('nameOfTyper: '+nameOfTyper.innerHTML)
            //nameOfTyper.innerHTML += '<br><br>' + data.sender + ' is typing...';

          }
        }
      }
    })

    socket.on('stop typing',(data) => {
      if(u == '') {
        var nameOfTyper = document.getElementById(data.sender);
        globalVariableClickedON = data.sender;
        nameOfTyper.innerHTML = data.sender + '<br><b>*Received a new message*</b><br>';
        return;
      }
      else {
        if(globalE == data.senderE) {
          var typingDiv = document.getElementsByClassName('typingDiv')[0];
          typingDiv.parentNode.removeChild(typingDiv);
        }
      }
    })

    socket.on('read',(data) => {
      //alert('read by: '+data.sender+' or also called as u: '+u);
      if(data.sender == u) {
        if($('.seenDiv').length) {
          return;
        }
        var seenDiv = document.createElement('div');
        var displayWholeChat = document.getElementsByClassName('display-whole-chat')[0];
        seenDiv.setAttribute('class','seenDiv');
        seenDiv.innerHTML = data.sender + ' has seen...'
        displayWholeChat.appendChild(seenDiv)
        displayWholeChat.scrollTop = displayWholeChat.scrollHeight;
        if($('.typingDiv').length) {
          //console.log('it exists');
          var typingDiv = document.getElementsByClassName('typingDiv')[0];
          typingDiv.parentNode.removeChild(typingDiv);
        }

      }
    })



    </script>
  </body>
</html>
